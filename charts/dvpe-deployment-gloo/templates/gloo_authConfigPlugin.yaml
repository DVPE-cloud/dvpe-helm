{{- $serviceName := include "service.name" . -}}
{{- $appUrl := include "oauth2.oidcAuthorizationCode.appUrl" . -}}

{{- with .Values.gloo.authConfig.spec.configs }}
{{- if and $.Values.gloo.enabled }}
{{- if or .authExtensionPlugin.enabled .authInterceptorPlugin.enabled .clientCredentialsPlugin.enabled .oauth.enabled .tokenValidationPlugin.enabled .additionalPlugins }}


apiVersion: enterprise.gloo.solo.io/v1
kind: AuthConfig
metadata:
  name: {{ $serviceName}}-{{ $.Values.gloo.authConfig.name }}
  namespace: {{default $.Release.Namespace $.Values.gloo.authConfig.namespace }}
spec:
  configs:
    {{- if .authInterceptorPlugin.enabled }}
    - passThroughAuth:
        config:
          openIdConfigurationUrl: {{ .authInterceptorPlugin.config.oidcUrl }}
          strongAuthenticationLevel: {{ .oauth.strongAuthenticationLevel }}
        grpc:
          address: {{ .authInterceptorPlugin.config.grpcAddress }}
    {{- end }}
    {{- if .oauth.enabled }}
    - oauth2:
        oidcAuthorizationCode:
          {{- if .oauth.strongAuthenticationLevel }}
          authEndpointQueryParams:
            acr_values: {{ eq (int .oauth.strongAuthenticationLevel) 4000 | ternary "strongAuth4000Service" "strongAuth7000Service" }}
          {{- end }}
          appUrl: {{ $appUrl }}
          callbackPath: {{ $.Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath }}
          clientId: {{ .oauth.clientId }}
          clientSecretRef:
            {{- if $.Values.externalSecrets.oauth2.key }}
            name: {{ $serviceName }}-oidc-secrets
            namespace: {{ $.Release.Namespace }}
            {{- else }}
            name: {{ .oauth.clientSecretRef.name }}
            namespace: {{default $.Release.Namespace .oauth.clientSecretRef.namespace }}
            {{- end }}
          issuerUrl: {{ .oauth.issuerUrl }}
          scopes:
          {{- range .oauth.scopes }}
            - {{ . }}
          {{- end }}
          session:
            cookieOptions:
              {{- if .oauth.cookieDomain }}
              domain: {{ .oauth.cookieDomain | quote }}
              {{- end }}
              maxAge: {{ .oauth.maxAge }}
              sameSite: {{ .oauth.sameSite }}
            {{- if .oauth.cache.enabled }}
            redis:
              cookieName: {{ .oauth.cache.cookieName }}
              options:
                host: {{ .oauth.cache.host }}
            {{- end }}
    {{- end }}
    {{- if .tokenValidationPlugin.enabled }}
    - passThroughAuth:
        grpc:
          address: {{ .tokenValidationPlugin.config.grpcAddress }}
        config:
          openIdConfigurationUrl: {{ .tokenValidationPlugin.config.oidcUrl }}
          {{- if .tokenValidationPlugin.config.allowedClientIds }}
          allowedClientIds:
          {{- range .tokenValidationPlugin.config.allowedClientIds }}
            - {{ . }}
          {{- end }}
          {{- end }}
          {{- if .tokenValidationPlugin.config.strongAuthenticationLevel }}
          strongAuthenticationLevel: {{ .tokenValidationPlugin.config.strongAuthenticationLevel }}
          {{- end }}
    {{- end }}
    {{- if .clientCredentialsPlugin.enabled }}
    - passThroughAuth:
        grpc:
          address: {{ .clientCredentialsPlugin.config.grpcAddress }}
        config:
          cache:
            disabled: {{ not .clientCredentialsPlugin.config.cache.enabled}}
          clientId: {{ .clientCredentialsPlugin.config.clientId }}
          clientSecretRef:
            {{- if $.Values.externalSecrets.oauth2.key }}
            name: {{ $serviceName }}-oauth2-client-credentials-secrets
            namespace: {{ $.Release.Namespace }}
            {{- else }}
            name: {{ .clientCredentialsPlugin.config.clientSecretRef.name }}
            namespace: {{ default $.Release.Namespace .clientCredentialsPlugin.config.clientSecretRef.namespace }}
            {{- end }}
          mode: {{ .clientCredentialsPlugin.config.mode }}
          openIdConfigurationUrl: {{ .clientCredentialsPlugin.config.oidcUrl }}
          {{- if .clientCredentialsPlugin.config.allowedClientIds }}
          allowedClientIds:
          {{- range .clientCredentialsPlugin.config.allowedClientIds }}
            - {{ . }}
          {{- end }}
          {{- end }}
    {{- end }}
    {{- if .authExtensionPlugin.enabled }}
    - passThroughAuth:
        config:
          enableAccessTokenForwarding: {{ .authExtensionPlugin.config.enableAccessTokenForwarding }}
          enableQAccountMatching: {{ .authExtensionPlugin.config.enableQAccountMatching }}
          enableSubjectForwarding: {{ .authExtensionPlugin.config.enableSubjectForwarding }}
          enableUserInfoForwarding: {{ .authExtensionPlugin.config.enableUserInfoForwarding }}
          enableJwtContentForwarding: {{ .authExtensionPlugin.config.enableJwtContentForwarding }}
          openIdConfigurationUrl: {{ .authExtensionPlugin.config.oidcUrl }}
        grpc:
          address: {{ .authExtensionPlugin.config.grpcAddress }}
    {{- end }}
    {{- if .additionalPlugins }}
    {{- toYaml .additionalPlugins | nindent 4 }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
