{{- $serviceName := include "service.name" . -}}

  {{- if .Values.gloo.enabled }}

apiVersion: enterprise.gloo.solo.io/v1
kind: AuthConfig
metadata:
  name: {{ $serviceName}}-{{ .Values.gloo.authConfig.name }}
  namespace: {{default .Release.Namespace .Values.gloo.authConfig.namespace }}
spec:
  configs:
    {{- if .Values.gloo.authConfig.spec.configs.oauth.enabled }}
    - oauth2:
        oidcAuthorizationCode:
          {{- if .Values.gloo.authConfig.spec.configs.oauth.strong_authentication_level }}
          authEndpointQueryParams:
            acr_values : {{ eq .Values.gloo.authConfig.spec.configs.oauth.strong_authentication_level 4000 | ternary "strongAuth4000Service" "strongAuth7000Service" }}
          {{- end }}
          app_url: "https://{{ .Values.gloo.virtualservice.spec.virtualHost.domains }}"
          callback_path: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath }}
          client_id: {{ .Values.gloo.authConfig.spec.configs.oauth.client_id }}
          client_secret_ref:
            {{- if .Values.externalSecrets.oidc.key }}
            name: {{ $serviceName }}-oidc-secrets
            namespace: {{ .Release.Namespace }}
            {{- else }}
            name: {{ .Values.gloo.authConfig.spec.configs.oauth.client_secret_ref.name }}
            namespace: {{default .Release.Namespace .Values.gloo.authConfig.spec.configs.oauth.client_secret_ref.namespace }}
            {{- end }}
          issuer_url: {{ .Values.gloo.authConfig.spec.configs.oauth.issuer_url }}
          scopes:
          {{- if .Values.gloo.authConfig.spec.configs.oauth.scopes }}
          {{- toYaml .Values.gloo.authConfig.spec.configs.oauth.scopes | nindent 8 }}
          {{- end }}
          session:
            cookieOptions:
              {{- if .Values.gloo.authConfig.spec.configs.oauth.cookie_domain }}
              domain: {{ .Values.gloo.authConfig.spec.configs.oauth.cookie_domain | quote }}
              {{- end }}
              maxAge: 0
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.enabled }}
    - pluginAuth:
        name: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.name }}
        pluginFileName: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.name }}.so
        exportedSymbolName: Plugin
        config:
          OpenIdConfigurationUrl: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.oidcUrl }}
          {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.cache.enabled }}
          Cache:
            DynamoDBTableName: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.cache.tableName }}
            AwsRegion:  {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.cache.awsRegion }}
          {{- end }}
          {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.allowedClientIds }}
          AllowedClientIds: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.allowedClientIds }}
          {{- end }}
          {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.authLevel }}
          StrongAuthenticationLevel: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.authLevel }}
          {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.enabled }}
    - pluginAuth:
        name: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.name }}
        pluginFileName: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.name }}.so
        exportedSymbolName: Plugin
        config:
          {{- if .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.cache.enabled }}
          Cache:
            DynamoDBTableName: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.cache.tableName }}
            AwsRegion:  {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.cache.awsRegion }}
          {{- end }}
          ClientId: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.clientId }}
          ClientSecretRef:
            {{- if .Values.externalSecrets.oidc.key }}
            name: {{ $serviceName }}-oidc-m2m-secrets
            namespace: {{ .Release.Namespace }}
            {{- else }}
            name: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.clientSecretRef.name }}
            namespace: {{ default .Release.Namespace .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.clientSecretRef.namespace }}
            {{- end }}
          Mode: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.mode }}
          OpenIdConfigurationUrl: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.oidcUrl }}
          {{- if .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.allowedClientIds }}
          AllowedClientIds: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.allowedClientIds }}
          {{- end }}
      {{- end }}
      {{- if .Values.gloo.authConfig.spec.configs.additionalPlugins }}
    {{- toYaml .Values.gloo.authConfig.spec.configs.additionalPlugins | nindent 4 }}
  {{- end }}
  {{- end }}
