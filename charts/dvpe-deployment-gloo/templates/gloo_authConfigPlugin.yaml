{{- $serviceName := include "service.name" . -}}
{{- $appUrl := include "oauth2.oidcAuthorizationCode.appUrl" . -}}


  {{- if .Values.gloo.enabled }}

apiVersion: enterprise.gloo.solo.io/v1
kind: AuthConfig
metadata:
  name: {{ $serviceName}}-{{ .Values.gloo.authConfig.name }}
  namespace: {{default .Release.Namespace .Values.gloo.authConfig.namespace }}
spec:
  configs:
    {{- if .Values.gloo.authConfig.spec.configs.authInterceptorPlugin.enabled }}
    - passThroughAuth:
        config:
          openIdConfigurationUrl: {{ .Values.gloo.authConfig.spec.configs.authInterceptorPlugin.config.oidcUrl }}
          strongAuthenticationLevel: {{ .Values.gloo.authConfig.spec.configs.oauth.strongAuthenticationLevel }}
        grpc:
          address: {{ .Values.gloo.authConfig.spec.configs.authInterceptorPlugin.config.grpcAddress }}
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.oauth.enabled }}
    - oauth2:
        oidcAuthorizationCode:
          {{- if .Values.gloo.authConfig.spec.configs.oauth.strongAuthenticationLevel }}
          authEndpointQueryParams:
            acr_values: {{ eq (int .Values.gloo.authConfig.spec.configs.oauth.strongAuthenticationLevel) 4000 | ternary "strongAuth4000Service" "strongAuth7000Service" }}
          {{- end }}
          app_url: {{ $appUrl }}
          callback_path: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath }}
          client_id: {{ .Values.gloo.authConfig.spec.configs.oauth.clientId }}
          client_secret_ref:
            {{- if .Values.externalSecrets.oauth2.key }}
            name: {{ $serviceName }}-oidc-secrets
            namespace: {{ .Release.Namespace }}
            {{- else }}
            name: {{ .Values.gloo.authConfig.spec.configs.oauth.clientSecretRef.name }}
            namespace: {{default .Release.Namespace .Values.gloo.authConfig.spec.configs.oauth.clientSecretRef.namespace }}
            {{- end }}
          issuer_url: {{ .Values.gloo.authConfig.spec.configs.oauth.issuerUrl }}
          scopes:
          {{- if .Values.gloo.authConfig.spec.configs.oauth.scopes }}
          {{- toYaml .Values.gloo.authConfig.spec.configs.oauth.scopes | nindent 8 }}
          {{- end }}
          session:
            cookieOptions:
              {{- if .Values.gloo.authConfig.spec.configs.oauth.cookieDomain }}
              domain: {{ .Values.gloo.authConfig.spec.configs.oauth.cookieDomain | quote }}
              {{- end }}
              maxAge: {{ .Values.gloo.authConfig.spec.configs.oauth.maxAge }}
            {{- if .Values.gloo.authConfig.spec.configs.oauth.cache.enabled }}
            redis:
              cookieName: {{ .Values.gloo.authConfig.spec.configs.oauth.cache.cookieName }}
              options:
                host: {{ .Values.gloo.authConfig.spec.configs.oauth.cache.host }}
            {{- end }}
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.enabled }}
    - passThroughAuth:
        grpc:
          address: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.grpcAddress }}
        config:
          openIdConfigurationUrl: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.oidcUrl }}
          {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.allowedClientIds }}
          allowedClientIds: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.allowedClientIds }}
          {{- end }}
          {{- if .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.strongAuthenticationLevel }}
          strongAuthenticationLevel: {{ .Values.gloo.authConfig.spec.configs.tokenValidationPlugin.config.strongAuthenticationLevel }}
          {{- end }}
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.enabled }}
    - pluginAuth:
        name: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.name }}
        pluginFileName: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.name }}.so
        exportedSymbolName: Plugin
        config:
          {{- if .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.cache.enabled }}
          cache:
            dynamoDBTableName: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.cache.tableName }}
            awsRegion:  {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.cache.awsRegion }}
          {{- end }}
          clientId: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.clientId }}
          clientSecretRef:
            {{- if .Values.externalSecrets.oauth2.key }}
            name: {{ $serviceName }}-oauth2-client-credentials-secrets
            namespace: {{ .Release.Namespace }}
            {{- else }}
            name: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.clientSecretRef.name }}
            namespace: {{ default .Release.Namespace .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.clientSecretRef.namespace }}
            {{- end }}
          mode: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.mode }}
          openIdConfigurationUrl: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.oidcUrl }}
          {{- if .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.allowedClientIds }}
          allowedClientIds: {{ .Values.gloo.authConfig.spec.configs.clientCredentialsPlugin.config.allowedClientIds }}
          {{- end }}
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.authExtensionPlugin.enabled }}
    - passThroughAuth:
        config:
          enableAccessTokenForwarding: {{ .Values.gloo.authConfig.spec.configs.authExtensionPlugin.config.enableAccessTokenForwarding }}
          enableQAccountMatching: {{ .Values.gloo.authConfig.spec.configs.authExtensionPlugin.config.enableQAccountMatching }}
          enableSubjectForwarding: {{ .Values.gloo.authConfig.spec.configs.authExtensionPlugin.config.enableSubjectForwarding }}
          openIdConfigurationUrl: {{ .Values.gloo.authConfig.spec.configs.authExtensionPlugin.config.oidcUrl }}
        grpc:
          address: {{ .Values.gloo.authConfig.spec.configs.authExtensionPlugin.config.grpcAddress }}
    {{- end }}
    {{- if .Values.gloo.authConfig.spec.configs.additionalPlugins }}
    {{- toYaml .Values.gloo.authConfig.spec.configs.additionalPlugins | nindent 4 }}
  {{- end }}
  {{- end }}
