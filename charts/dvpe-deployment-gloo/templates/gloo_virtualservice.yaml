{{- $upstreamName := include "upstream.name" . -}}
{{- $serviceName := include "service.name" . -}}
{{- $domain := include "gloo.virtualservice.spec.virtualHost.domains" . -}}

{{- if .Values.gloo.enabled }}

---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  labels:
    gloo.wadtfy.bmwgroup.net/ingress-scope: {{ .Values.gloo.ingress.scope }}
  name: {{ $serviceName }}-virtualservice
  namespace: {{ .Release.Namespace }}
spec:
  sslConfig:
    parameters:
      minimumProtocolVersion: {{ .Values.gloo.virtualservice.spec.sslConfig.minimumProtocolVersion }}
    secretRef:
      {{- if eq .Values.gloo.ingress.scope "public" }}
      name: gloo-public-tls
      {{- else }}
      name: {{ .Values.gloo.virtualservice.spec.sslConfig.secretRef.name }}
      {{- end }}
      namespace: {{default .Values.gloo.namespace .Values.gloo.virtualservice.spec.sslConfig.secretRef.namespace }}
    sniDomains: {{ $domain }}
  virtualHost:
    domains: {{ $domain }}
    options:
      {{- if .Values.gloo.virtualservice.spec.virtualHost.responseHeadersToAdd }}
      headerManipulation:
        responseHeadersToAdd:
        {{- range $key, $val := .Values.gloo.virtualservice.spec.virtualHost.responseHeadersToAdd}}
        - header:
            key: {{ $val.name }}
            value: {{ $val.value }}
        {{- end}}
      {{- end}}
      {{- if or .Values.gloo.virtualservice.spec.virtualHost.cors.allowOrigin .Values.gloo.virtualservice.spec.virtualHost.cors.allowSubdomain }}
      cors:
        allowCredentials: {{ .Values.gloo.virtualservice.spec.virtualHost.cors.allowCredentials }}
        allowHeaders:
          {{- range .Values.gloo.virtualservice.spec.virtualHost.cors.allowHeaders }}
          - {{ . }}
          {{- end }}
        allowMethods:
          {{- range .Values.gloo.virtualservice.spec.virtualHost.cors.allowMethods }}
          - {{ . }}
          {{- end }}
        allowOrigin:
          {{- range .Values.gloo.virtualservice.spec.virtualHost.cors.allowOrigin }}
          - {{ . | quote }}
          {{- end }}
        allowOriginRegex:
          {{- range .Values.gloo.virtualservice.spec.virtualHost.cors.allowSubdomain }}
          - {{ . | replace "." "[.]" | replace "://" "://([a-zA-Z0-9]+[.-])*[a-zA-Z0-9]+[.]" | quote }}
          {{- end }}
        exposeHeaders:
          {{- range .Values.gloo.virtualservice.spec.virtualHost.cors.exposeHeaders }}
          - {{ . }}
          {{- end }}
        maxAge: {{ .Values.gloo.virtualservice.spec.virtualHost.cors.maxAge }}
        {{- end }}
    routes:
      {{- if and .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.enabled .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.alternativePath }}
      - matchers:
          - prefix: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.alternativePath }}
        redirectAction:
          pathRedirect: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.path }}
      {{- end }}
      {{- if .Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath }}
      - matchers:
          - prefix: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath }}
        routeAction:
          single:
            upstream:
              name: {{ $upstreamName }}
              namespace: {{ .Values.gloo.upstream.namespace }}
        options:
          extauth:
            configRef:
              name: {{ $serviceName}}-{{ .Values.gloo.authConfig.name }}
              namespace: {{default .Release.Namespace .Values.gloo.authConfig.namespace }}
      {{- end }}
      {{- if .Values.gloo.virtualservice.spec.virtualHost.routes.appPath }}
      - matchers:
          - prefix: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.appPath }}
        routeAction:
          single:
            upstream:
              name: {{ $upstreamName }}
              namespace: {{ .Values.gloo.upstream.namespace }}
        options:
          {{- if .Values.gloo.virtualservice.spec.virtualHost.routes.appPathTimeout }}
          timeout: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.appPathTimeout | quote }}
          {{- end}}
          extauth:
            configRef:
              name: {{ $serviceName}}-{{ .Values.gloo.authConfig.name }}
              namespace: {{default .Release.Namespace .Values.gloo.authConfig.namespace }}
      {{- end}}
      {{- if ne .Values.gloo.virtualservice.spec.virtualHost.routes.appPath "/" }}
      - matchers:
          - prefix: /
        routeAction:
          single:
            upstream:
              name: {{ $upstreamName }}
              namespace: {{ .Values.gloo.upstream.namespace }}
      {{- end}}
      {{- if .Values.gloo.virtualservice.spec.virtualHost.routes.additionalRoutes }}
    {{- toYaml .Values.gloo.virtualservice.spec.virtualHost.routes.additionalRoutes | nindent 6 }}
      {{- end }}

{{- if or .Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.enabled }}

---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: {{ $serviceName }}-http-to-https
  namespace: {{ .Release.Namespace }}
spec:
  virtualHost:
    domains: {{ $domain }}
    routes:
      - matchers:
        {{- if .Values.gloo.virtualservice.spec.virtualHost.routes.callbackUrlPath }}
        - prefix: /
        {{- else }}
        - prefix: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.path }}
        {{- if .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.alternativePath }}
        - prefix: {{ .Values.gloo.virtualservice.spec.virtualHost.routes.swagger.alternativePath }}
        {{- end }}
        {{- end }}
        redirectAction:
          httpsRedirect: true
{{- end }}

{{- end }}
